@page "/blogs/{urlHandle}"
@model DevDiaries.Web.Pages.Admin.Blogs.DetailsModel
@{
}
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager
@inject SignInManager<IdentityUser> signInManager

<div class="container my-5">

    <div class="row justify-content-center">
        <h1 class="mb-3">
            @Model.Blog.Heading
        </h1>

        <div class="d-flex justify-content-between mb-3">
            <span>@Model.Blog.Author</span>
            <span>@Model.Blog.PublishedDate.ToShortDateString()</span>
        </div>

        <div class="mb-3">
            <span>
                @if (signInManager.IsSignedIn(User))
                {
                    @if (Model.Liked)
                    {
                        <a style="cursor:pointer">
                            <i class="bi bi-hand-thumbs-up-fill"></i>
                        </a>
                    }
                    else
                    {
                        <a id="btnLike" style="cursor:pointer">
                            <i class="bi bi-hand-thumbs-up"></i>
                        </a>
                    }
                }

                <span id="totalLikes">
                    @Model.Likes

                    @if (Model.Likes > 1)
                    {
                        <span>likes </span>
                    }
                    else
                    {
                        <span>like </span>
                    }


                </span>
            </span>
        </div>

        <div class="mb-3">
            @if (Model.Blog.Tags != null)
            {
                foreach (var tag in Model.Blog.Tags)
                {
                    <a href="/tags/@tag.Name">
                        <span class="badge btn btn-dark">@tag.Name</span>
                    </a>
                }
            }
        </div>

        <img src="@Model.Blog.FeaturedImageURL" />

        <div class="blog-details">
            @Html.Raw(Model.Blog.Content)
        </div>
    </div>

</div>

@section Scripts{

    <script>
        const btnLike = document.getElementById('btnLike');
        const totalLikesElement = document.getElementById('totalLikes');

        async function getTotalLikes() {

            debugger;
            fetch('/api/blogpostlike/@Model.Blog.Id/totalLikes', {
                method: 'Get',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': "*/*"
                }
            })
                .then(data =>

                    data.json())
                .then(result =>

                    totalLikesElement.innerHTML = result);
        }

        async function addLikeForBlog() {
            fetch('/api/blogpostlike/add', {

                method: 'POST',

                headers: {
                    'Content-Type': 'application/json',
                    'Accept': "*/*"
                },
                body: JSON.stringify({ blogPostId: '@Model.Blog.Id', userId: '@userManager.GetUserId(User)' })
            }).then(() => {

                btnLike.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLike.removeEventListener('click', addLikeForBlog);
                getTotalLikes();
            });
        }

        btnLike.addEventListener('click', addLikeForBlog);

    </script>
}